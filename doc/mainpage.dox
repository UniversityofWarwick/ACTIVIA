/**
@mainpage ACTIVIA Main Page

\tableofcontents

\section intro Introduction

This C<sup>++</sup> package can be used to calculate target-product cross-sections 
and the production and decay yields of (radioactive) isotopes from cosmic ray
activation using data tables and semi-empirical formulae, as detailed 
in the paper <b>ACTIVIA: Calculation of isotope production cross-sections 
and yields</b>, published in 
<a href="http://dx.doi.org/10.1016/j.nima.2007.12.008">Nucl. Instrum. Meth A. 586,
286 (2008)</a>, which is also available on the 
<a href="http://uk.arxiv.org/abs/0709.3472">arXiv</a>.

The history of the package can be seen \link history here\endlink. 
The software on
<a href="https://github.com/UniversityofWarwick/ACTIVIA">GitHub</a> should 
be considered the official release. Previous versions are available
<a href="http://www2.warwick.ac.uk/go/activia">here</a>.

\section build Building the code  

This package does not require any other external software to run.
However, it can use <a href="http://root.cern.ch">ROOT</a>, a general purpose 
C<sup>++</sup> data analysis framework, for creating output files, and a
graphical user interface (GUI) can be enabled based on the open source
version of the <a href="https://qt-project.org/downloads">Qt 4</a> software framework.

The configure script should be run to set the compiler options,
and to enable the ROOT output and/or the GUI extension.

<b>
./configure\n
make
</b>

Use <b>configure \--help</b> to see the list of available options. The
configuration will try to automatically detect if your system has
ROOT installed (version 5.14.00e and above required). Otherwise, use 
the "configure \--rootsys" option. The GUI can be configured using 
"configure \--gui". This requires a full installation of Qt (version 4);
the "\--qtlib", "\--qtinc" and "\--moc" options should specify the location 
of the Qt libraries, include files and the Meta-Object Compiler (moc)
command, respectively.

By default, the compilation creates a shared library <b>lib/libActivia.so</b>
as well as the binary <b>bin/Activia</b>.

Note that the shared library <b>lib/libActivia.so</b> needs to be included in the
<b>LD_LIBRARY_PATH</b> environment variable before <b>bin/Activia</b> can be run
using (for csh/tcsh):

<b>setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:base_directory_of_Activia/lib</b>

This can be set using the <b>pathlib.sh</b> script from the Activia base
directory. For csh/tcsh:

<b>
source pathlib.sh
</b>
                          
\section run Running the code

After creating the <b>bin/Activia</b> executable, you can run the code by going 
to the workdir directory

<b>
cd workdir
</b>

This is the recommended place to run the code, since this directory contains
(a soft-link to) the necessary <b>decayData.dat</b> file, which specifies all 
possible isotope products together with their side-branches. The format 
of each line in <b>decayData.dat</b> is

productZ   productA   halfLife   nSideBranches  SBZ1 SBA1 ... SBZn SBAn

where SBZi and SBAi are the Z and A values of side-branch i, respectively. 
The half-life value must be in units of days.


a) The recommended way to run the program is to use an input file.
Examples are provided in the <b>workdir/runFiles</b> sub-directory:

<b>
cd workdir\n
sh runFiles/runNatCu_Co60.sh
</b>

b) To run the code in a terminal window (no GUI), issue the command

<b>
./bin/Activia
</b>

where the program will ask you a set of questions which you need 
to provide interactively. If a question requires several input 
values, then they all need to be put on the same line, each 
separated by a space, before typing enter (carriage return) to 
accept them. Please do not use other symbols (such as commas) to 
separate the input values as this will result in I/O errors.


c) If you want to use the GUI, make sure the code has been compiled and 
linked with the <a href="https://qt-project.org/downloads">Qt 4</a> 
libraries (see above). Then issue the command

<b>
./bin/Activia 1
</b>

where a GUI window will pop-up (the number 1 specifies we want to 
use the GUI).

If there is an error saying that the Qt libraries cannot be found, 
then set the environment variable <b>LD_LIBRARY_PATH</b> to include the
Qt library path:

<b>
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:location_of_Qt_libraries
</b>

Right clicking on any section in the window will provide some 
help/hints on how to fill in the form. Clicking on "Run" at the bottom 
will run the code, where another window will pop-up, detailing the 
progress of the calculation. Once the form has been filled in, the 
input can be saved as a file ("File" -> "Save input"). 
Reloading an input file will preset the various entries in the form 
("File"->"Load input").



To run the example of calculating all isotope product yields for
natural tellerium and using <a href="http://root.cern.ch">ROOT</a> output files, do

<b>
cd workdir\n
sh runFiles/runNatTe_All.sh
</b>

To use ASCII output files, run the following script instead:

<b>
sh runFiles/runNatTe_All_ascii.sh
</b>

The run file specifies all required inputs for the calculations and also 
provides the names and level of detail (summary or full information) 
of the cross-section and yield output files.


\section tables Data tables                               

If you want to use data tables, then the workdir must also contain a file 
(e.g. <b>listOfDataFiles.txt</b>) that specifies the filenames of all of the 
ASCII tables. This file must be provided interactively or in the run 
script file.

Each data file has a set of initial comments specified by the hash (\#) 
symbol, followed by the target Z and A values, the "#New table" line 
and then the product Z and A values. The remaining lines are the actual 
energy and cross-section data for the given target-product pair. 
Another set of product cross-section values can be provided after the 
lines "#New table" and "Product ZProd AProd" for the 
same target isotope (specified at the start of the file).

The directory <b>workdir/MENDL</b> contains a <b>\link mendl README.md\endlink</b> 
file with instructions on downloading
<a href="http://www.oecd-nea.org/dbforms/data/eva/evatapes/mendl_2/mendl2.html">
Medium Energy Nuclear Data Library (MENDL-2)</a> data 
files from the <a href="http://www.oecd-nea.org">OECD Nuclear Energy Agency</a> 
repository that can then be used in Activia. The template file 
<b>workdir/listOfDataFiles.txt</b> should already contain a list of the 
MENDL data files, provided the steps in 
<b>\link mendl workdir/MENDL/README.md\endlink</b> are followed.

An example script of running Activia with the MENDL data tables can be seen
in the file

<b>
sh runFiles/runNatTe_All_DataTables.sh\n
</b>

which contains the line

<b>
listOfDataFiles.txt 0.001\n
</b>

This tells Activia to read any data files specified in <b>listOfDataFiles.txt</b>,
and the number <b>0.001</b> is the minimum cross-section (in mb) for the data, i.e.
if the data value is below this number, then the formulae are used instead.


It is also possible to use data files that are not based on the MENDL tables.
As an illustrative example, consider a file myDataFiles.txt that lists
only two filenames for cross-section data for two target isotopes; one for 
the target isotope As-74 and another one for the target isotope Ba-133:

<b>
as74.dat\n
ba133.dat
</b>

Next, the file <b>as74.dat</b> contains the following energy-dependent 
cross-section data for three example products, Se-74, Se-73 and Se-72:

\# Table format is as follows:\n
\# Target Z A\n
\# New table comment\n
\# Product Z A\n
\# E (MeV)   sigma (mb)\n
\# Target material is AS-74; (Z,A) = (33, 74)\n
Target 33 74\n
\# New table\n
Product 34 74\n
1e-11    0\n
2    0.217\n
3    8.32\n
4    55.8\n
.\n
.\n
(provide all necessary energy and cross-section data)\n
.\n
.\n
\# New table\n
Product 34 73\n
11.655    0\n
13    25.2\n
14    102\n
15    208\n
.\n
.\n
\# New table\n
Product 34 72\n
20.158    0\n
21    0.0626\n
22    7.57\n
23    53.6\n
.\n
.\n

The file <b>ba133.dat</b> will need to have a similar structure.


\section output Output variables

The code produces two output files: one for cross-section data and 
production rates, another one for decay yield information. Below we
describe the output variables in the <a href="http://root.cern.ch">ROOT</a> files. 
Variables in the ASCII (Stream) output files have the same meaning.

In the cross-section output file, we have two 
<a href="http://root.cern.ch/root/html/TTree.html">TTree's</a> named <b>xSecEData</b>,
which stores detailed cross-section vs energy results, and <b>xSecSummary</b>,
which provides summary information.

Variables in <b>xSecEData</b> are:

<table>
<tr>
  <td><b>Variable</b></td>
  <td><b>Description</b></td>
</tr>

<tr>
  <td>Zt</td>
  <td>Target isotope Z number</td>
</tr>

<tr>
  <td>At</td>
  <td>Target isotope A number</td>
</tr>

<tr>
  <td>frac</td>
  <td>Relative abundance fraction of the target isotope (0.0 to 1.0)</td>
</tr>

<tr>
  <td>Z</td>
  <td>Product isotope atomic Z number</td>
</tr>

<tr>
  <td>A</td>
  <td>Product isotope mass A number</td>
</tr>

<tr>
  <td>nPoints</td>
  <td>Number of energy points or bins (used in the beam spectrum)</td>
</tr>

<tr>
  <td>Energy</td>
  <td>Energy of the beam (MeV)</td>
</tr>

<tr>
  <td>Sigma</td>
  <td>Cross-section (mb), not weighted by the relative target isotope
           fraction, frac</td>
</td>

<tr>
  <td>ProdRate</td>
  <td>Production rate (per kg per day), weighted by the relative
           target isotope fraction, frac</td>
</tr>

</table>

Variables in <b>xSecSummary</b> are:

<table>
<tr>
  <td><b>Variable</b></td>
  <td><b>Description</b></td>
</tr>

<tr>
  <td>ProdZ</td>
  <td>Product isotope atomic Z number</td>
</tr>

<tr>
  <td>ProdA</td>
  <td>Product isotope mass A number</td>
</tr>

<tr>
  <td>TotSigma</td>
  <td>Total cross-section for the product isotope (mb), summed over
	      all energy bins and normalised over all target isotope 
              fractions</td>
</tr>

<tr>
  <td>TotProdRate</td>
  <td>Total production rate (per kg per day), normalised 
              over all target isotope abundance fractions</td>
</tr>

</table>

The decay yield output file has two TTree's, one named "initialYields", 
containing information about the initial production rate for product 
isotopes and their side-branches, and another one named "decaySummary", 
which summaries the initial and final yields of all product isotopes, 
weighted over all target isotope abundance fractions.

Variables in <b>initialYields</b> are:

<table>
<tr>
  <td><b>Variable</b></td>
  <td><b>Description</b></td>
</tr>

<tr>
  <td>Zt</td>
  <td>Target isotope atomic Z number</td>
</tr>

<tr>
  <td>At</td>
  <td>Target isotope mass A number</td>
</tr>

<tr>
  <td>Z</td>
  <td>Troduct isotope atomic Z number</td>
</tr>

<tr>
  <td>A</td>
  <td>Product isotope mass A number</td>
</tr>

<tr>
  <td>SB</td>
  <td>Side-branch flag (1 = yes, 0 = no)</td>
</tr>

<tr>
  <td>R</td>
  <td>Production rate of isotope/side-branch (per kg per day)</td>
</tr>

<tr>
  <td>R_tot</td>
  <td>Production rate of isotope (Z,A), summing over side-branches 
         (per kg per day)
      = 0.0 for side-branches</td>
</tr>

<tr>
  <td>I0</td>
  <td>Initial product yield rate = R_tot*(1.0 - exp(-lambda*t_exp)), where
        lambda = ln2/t_Half,
        t_Half = half-life of the product isotope (days) and
        t_exp is the beam exposure time (days)</td>
</tr>
</table>

Variables in <b>decaySummary</b> are:

<table>
<tr>
  <td><b>Variable</b></td>
  <td><b>Description</b></td>
</tr>

<tr>
  <td>ip</td>
  <td>Product isotope order number</td>
</tr>

<tr>
  <td>Z</td>
  <td>Product isotope atomic Z number</td>
</tr>

<tr>
  <td>A</td>
  <td>Product isotope mass A number</td>
</tr>

<tr>
  <td>tHalf</td>
  <td>Half-life of the product isotope (days), specified in the 
       "decayData.dat" file</td>
</tr>

<tr>
  <td>dndti</td>
  <td>Initial yield rate (per kg per day), at the start of the cooling 
        (beam off) period, weighted over all target isotopes</td>
</tr>

<tr>
  <td>dndtf</td>
  <td>Final yield rate (per kg per day), weighted over all target isotopes</td>
</tr>

</table>

\section validation Validation QA

Various validation cross-section plots can be created by using 
the <b>workdir/validation/runComparisons.sh</b> script. For specific details and 
reference plots comparing Activia calculations with measurements,
please look \link valid here\endlink.

\section license License

This software is distributed under the Boost Software License, Version 1,
(Aug 17 2003). The original is available at http://www.boost.org/LICENSE_1_0.txt.


\section author Authors

The authors are John Back and Yorck Ramachers.

\date Last update: 4<sup>th</sup> November 2014

*/